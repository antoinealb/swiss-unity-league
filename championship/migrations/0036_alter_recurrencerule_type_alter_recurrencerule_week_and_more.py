# Copyright 2024 Leonin League
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by Django 5.0.4 on 2024-06-17 14:00

from django.db import migrations, models

import championship.models


class Migration(migrations.Migration):

    dependencies = [
        ("championship", "0035_recurringevent_recurrencerule_event_recurring_event"),
    ]

    operations = [
        migrations.AlterField(
            model_name="recurrencerule",
            name="type",
            field=models.CharField(
                choices=[
                    ("SCHEDULE", "Scheduled"),
                    ("SKIP", "Skipped"),
                    ("REGIONAL", "Promoted to SUL Regional"),
                ],
                default="SCHEDULE",
                help_text="Choose 'Scheduled' to run the event on each of those days. Choose 'Skipped' to skip the event on some days. Choose 'Promoted to SUL Regional' to make the event SUL Regional on these days.",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="recurrencerule",
            name="week",
            field=models.CharField(
                choices=[
                    ("FIRST_WEEK", "First week of the month"),
                    ("SECOND_WEEK", "Second week of the month"),
                    ("SECOND_LAST_WEEK", "Second to last week of the month"),
                    ("LAST_WEEK", "Last week of the month"),
                    ("EVERY_WEEK", "Every week"),
                    ("EVERY_OTHER_WEEK", "Every other week"),
                ],
                default="EVERY_WEEK",
                help_text="Which week of the month your event will take place.",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="recurringevent",
            name="start_date",
            field=models.DateField(
                default=championship.models.tomorrow,
                help_text="The first date on which this event series will be held. Only events without results will be rescheduled.",
            ),
        ),
    ]
