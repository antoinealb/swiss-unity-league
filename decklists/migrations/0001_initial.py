# Copyright 2024 Leonin League
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by Django 5.0.4 on 2024-04-19 07:15

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("championship", "0033_specialreward"),
    ]

    operations = [
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human readable name of the Collection",
                        max_length=128,
                    ),
                ),
                (
                    "submission_deadline",
                    models.DateTimeField(
                        help_text="Time until new decklists can be created for this group or existing ones can be edited."
                    ),
                ),
                (
                    "publication_time",
                    models.DateTimeField(
                        help_text="Time at which the decklists will be revealed."
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Event for which those decklists are.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="championship.event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Decklist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "archetype",
                    models.CharField(
                        help_text="Player-submitted name for the deck (e.g. 'Burn')",
                        max_length=64,
                    ),
                ),
                (
                    "last_modified",
                    models.DateTimeField(
                        auto_now=True, help_text="Last modification timestamp."
                    ),
                ),
                (
                    "mainboard",
                    models.TextField(
                        help_text="Content of the main deck, one entry per line (e.g. 4 Brainstorm)"
                    ),
                ),
                (
                    "sideboard",
                    models.TextField(
                        help_text="Content of the sideboard, also one entry per line"
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="decklists.collection",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        help_text="Who is playing this deck.",
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="championship.player",
                    ),
                ),
            ],
        ),
    ]
